#
#  Copyright (c) 2011, 2012, ARM Limited. All rights reserved.
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#

[DEFINES]

################################################################################
#
# FD Section
# The [FD] Section is made up of the definition statements and a
# description of what goes into  the Flash Device Image.  Each FD section
# defines one flash "device" image.  A flash device image may be one of
# the following: Removable media bootable image (like a boot floppy
# image,) an Option ROM image (that would be "flashed" into an add-in
# card,) a System "Flash"  image (that would be burned into a system's
# flash) or an Update ("Capsule") image that will be used to update and
# existing system flash.
#
################################################################################
[FD.HI1610Evbb]
BaseAddress   = 0xA4800000|gArmTokenSpaceGuid.PcdFdBaseAddress  # The base address of the Firmware in NOR Flash.

Size          = 0x00300000|gArmTokenSpaceGuid.PcdFdSize         # The size in bytes of the FLASH Device
ErasePolarity = 1

# This one is tricky, it must be: BlockSize * NumBlocks = Size
BlockSize     = 0x00010000
NumBlocks     = 0x30

################################################################################
#
# Following are lists of FD Region layout which correspond to the locations of different
# images within the flash device.
#
# Regions must be defined in ascending order and may not overlap.
#
# A Layout Region start with a eight digit hex offset (leading "0x" required) followed by
# the pipe "|" character, followed by the size of the region, also in hex with the leading
# "0x" characters. Like:
# Offset|Size
# PcdOffsetCName|PcdSizeCName
# RegionType <FV, DATA, or FILE>
#
################################################################################

0x00000000|0x00040000
gArmTokenSpaceGuid.PcdSecureFvBaseAddress|gArmTokenSpaceGuid.PcdSecureFvSize
FILE = HwProductsPkg/Hi1610Evb/Hi1610Evbb/Sec/FVMAIN_SEC.Fv

0x00040000|0x001C0000
gArmTokenSpaceGuid.PcdFvBaseAddress|gArmTokenSpaceGuid.PcdFvSize
FV = FVMAIN_COMPACT

# uniBIOS_y00216284_092_start DTS2015090800843 2015-9-8 >>>
## Place for Trusted Firmware
0x00200000|0x00020000
FILE = HwProductsPkg/Hi1610Evb/Hi1610Evbb/bl1.bin
0x00220000|0x000e0000
FILE = HwProductsPkg/Hi1610Evb/Hi1610Evbb/fip.bin
# uniBIOS_y00216284_092_end 2015-9-8 <<<

################################################################################
#
# FV Section
#
# [FV] section is used to define what components or modules are placed within a flash
# device file.  This section also defines order the components and modules are positioned
# within the image.  The [FV] section consists of define statements, set statements and
# module statements.
#
################################################################################

[FV.FvMain]
BlockSize          = 0x40
NumBlocks          = 0         # This FV gets compressed so make it just big enough
FvAlignment        = 16        # FV alignment and FV attributes setting.
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE

  INF MdeModulePkg/Core/Dxe/DxeMain.inf

  INF HwPkg/Drivers/IoInitDxe/IoInitDxe.inf

  #
  # PI DXE Drivers producing Architectural Protocols (EFI Services)
  #
  INF ArmPkg/Drivers/CpuDxe/CpuDxe.inf
  INF MdeModulePkg/Core/RuntimeDxe/RuntimeDxe.inf
  INF MdeModulePkg/Universal/SecurityStubDxe/SecurityStubDxe.inf
  INF HwPkg/Drivers/NorFlashDxe/NorFlashDxe.inf

  INF HwProductsPkg/Hi1610Evb/OemNicConfigEvb/OemNicConfigEvb.inf

  #
  #
  #INF HwPkg/Drivers/SFC/SfcDxeDriver.inf
  INF HwProductsPkg/Hi1610Evb/Hi1610Evbb/Drivers/SFC/SfcDxeDriver.inf

  #uniBIOS_c00213799_start 2015-1-13 17:02:02
  #Issue ID:DTS2015011302934
  #INF HwPkg/Drivers/FlashFvbDxe/FlashFvbDxe.inf
  #INF MdeModulePkg/Universal/FaultTolerantWriteDxe/FaultTolerantWriteDxe.inf
  #INF MdeModulePkg/Universal/Variable/RuntimeDxe/VariableRuntimeDxe.inf
  INF MdeModulePkg/Universal/Variable/EmuRuntimeDxe/EmuVariableRuntimeDxe.inf
  #uniBIOS_c00213799_end 2015-1-13 17:02:02

  INF MdeModulePkg/Universal/CapsuleRuntimeDxe/CapsuleRuntimeDxe.inf
  #INF MdeModulePkg/Universal/MonotonicCounterRuntimeDxe/MonotonicCounterRuntimeDxe.inf
  INF EmbeddedPkg/EmbeddedMonotonicCounter/EmbeddedMonotonicCounter.inf

  INF EmbeddedPkg/ResetRuntimeDxe/ResetRuntimeDxe.inf
  INF EmbeddedPkg/RealTimeClockRuntimeDxe/RealTimeClockRuntimeDxe.inf
  INF EmbeddedPkg/MetronomeDxe/MetronomeDxe.inf

  INF MdeModulePkg/Universal/HiiDatabaseDxe/HiiDatabaseDxe.inf

  #
  # Multiple Console IO support
  #
  INF MdeModulePkg/Universal/Console/ConPlatformDxe/ConPlatformDxe.inf
  INF MdeModulePkg/Universal/Console/ConSplitterDxe/ConSplitterDxe.inf
  INF MdeModulePkg/Universal/Console/GraphicsConsoleDxe/GraphicsConsoleDxe.inf
  INF MdeModulePkg/Universal/Console/TerminalDxe/TerminalDxe.inf
  INF EmbeddedPkg/SerialDxe/SerialDxe.inf

  # Simple TextIn/TextOut for UEFI Terminal
  #INF EmbeddedPkg/SimpleTextInOutSerial/SimpleTextInOutSerial.inf

  #INF ArmPkg/Drivers/PL390Gic/PL390GicDxe.inf
  INF HwPkg/Drivers/PL390Gic/PL390GicDxe.inf
  #INF ArmPkg/Drivers/TimerDxe/TimerDxe.inf
  INF HwPkg/Drivers/TimerDxe_SOC/TimerDxe_SOC.inf
  #INF ArmPlatformPkg/Drivers/NorFlashDxe/NorFlashDxe.inf

  INF HwPkg/Override/ArmPlatformPkg/Drivers/SP805WatchdogDxe/SP805WatchdogDxe.inf

  #
  # Semi-hosting filesystem
  #
  #INF ArmPkg/Filesystem/SemihostFs/SemihostFs.inf

  #
  # FAT filesystem + GPT/MBR partitioning
  #
  INF HwPkg/Drivers/ramdisk/ramdisk.inf
  INF MdeModulePkg/Universal/Disk/DiskIoDxe/DiskIoDxe.inf
  INF MdeModulePkg/Universal/Disk/PartitionDxe/PartitionDxe.inf
  INF FatBinPkg/EnhancedFatDxe/Fat.inf
  INF MdeModulePkg/Universal/Disk/UnicodeCollation/EnglishDxe/EnglishDxe.inf
  INF IntelFrameworkModulePkg/Universal/StatusCode/RuntimeDxe/StatusCodeRuntimeDxe.inf  #DTS:DTS2014021101224  z00201473  2014.2.11


  #
  # Usb Support
  #
  INF HwPkg/Drivers/EhciDxe/EhciDxe.inf
  INF MdeModulePkg/Bus/Usb/UsbBusDxe/UsbBusDxe.inf
  INF MdeModulePkg/Bus/Usb/UsbMassStorageDxe/UsbMassStorageDxe.inf
  #
  # uniBIOS-y00216284 DTS2014071901841 2014-7-19
  #INF HwPkg/Pcie/PcieInitDxe.inf

  # uniBIOS-y00216284  2014-10-20
  INF MdeModulePkg/Universal/SmbiosDxe/SmbiosDxe.inf
  INF HwPkg/Drivers/SmbiosMiscDxe/SmbiosMiscDxe.inf

  # uniBIOS-y00216284-002  2014-10-31
  INF HwPkg/Drivers/MemorySubClassDxe/MemorySubClassDxe.inf
  
  # uniBIOS_y00216284_009_start 2014-12-13 14:37:09
  # Issue ID:DTS2014121301222 
  INF HwPkg/Drivers/ProcessorSubClassDxe/ProcessorSubClassDxe.inf

  #
  #ACPI
  #
  #INF HwPkg/AcpiTables/AcpiTables.inf
  INF MdeModulePkg/Universal/Acpi/AcpiTableDxe/AcpiTableDxe.inf
  INF MdeModulePkg/Universal/Acpi/AcpiPlatformDxe/AcpiPlatformDxe.inf

  INF RuleOverride=ACPITABLE HwPkg/Pv660AcpiTables/AcpiTablesHi1610.inf

  #
  #Network
  #
## uniBIOS-g00179230 DTS2013102904527 2013-10-29
  # uniBIOS_y00216284_042_start DTS2015051309327 2015-5-13 >>>
  #FILE FREEFORM = 347DB881-B9DB-4258-ACD0-3C444B861306 {
  #      SECTION RAW = HwPkg/Drivers/Network/SnpPV600Dxe_PLAT/bin/firmware_KR_v1p10.bin
  #      SECTION RAW = HwPkg/Drivers/Network/SnpPV600Dxe_PLAT/bin/retimer10Gbaser_KR_v1p10.bin
  #}
  # uniBIOS_y00216284_042_end 2015-5-13 <<<

  #INF HwPkg/Drivers/Network/SnpHi1610Dxe_PLAT/SnpPV600DxeMac6.inf
  INF HwProductsPkg/Hi1610Evb/Hi1610Evbb/Drivers/SnpPV600Dxe_PLAT/SnpPV600DxeMac6.inf

  
  INF MdeModulePkg/Universal/Network/ArpDxe/ArpDxe.inf
  INF MdeModulePkg/Universal/Network/Dhcp4Dxe/Dhcp4Dxe.inf
  INF MdeModulePkg/Universal/Network/DpcDxe/DpcDxe.inf
  INF MdeModulePkg/Universal/Network/Ip4ConfigDxe/Ip4ConfigDxe.inf
  INF MdeModulePkg/Universal/Network/Ip4Dxe/Ip4Dxe.inf
  INF MdeModulePkg/Universal/Network/MnpDxe/MnpDxe.inf
  INF MdeModulePkg/Universal/Network/Mtftp4Dxe/Mtftp4Dxe.inf
  INF MdeModulePkg/Universal/Network/Tcp4Dxe/Tcp4Dxe.inf
  INF MdeModulePkg/Universal/Network/Udp4Dxe/Udp4Dxe.inf
  INF MdeModulePkg/Universal/Network/UefiPxeBcDxe/UefiPxeBcDxe.inf
  #INF MdeModulePkg/Universal/Network/VlanConfigDxe/VlanConfigDxe.inf

  INF HwPkg/Drivers/UpdateFdtDxe/UpdateFdtDxe.inf

  #
  # Multimedia Card Interface
  #
  #INF EmbeddedPkg/Universal/MmcDxe/MmcDxe.inf
  #INF ArmPlatformPkg/Drivers/PL180MciDxe/PL180MciDxe.inf

  #
  #Sata
  #
  #INF HwPkg/Drivers/AtaAtapiPassThru/AtaAtapiPassThru.inf
  #INF MdeModulePkg/Bus/Ata/AtaBusDxe/AtaBusDxe.inf
  #INF HwPkg/Drivers/SasDxe/SasDxeDriver.inf
  INF HwProductsPkg/Hi1610Evb/Hi1610Evbb/Drivers/SasDxe/SasDxeDriver.inf

  #
  # UEFI application (Shell Embedded Boot Loader)
  #
  #INF HwPkg/Override/EmbeddedPkg/Ebl/Ebl.inf
  INF HwProductsPkg/Hi1610Evb/Hi1610Evbb/Ebl/Ebl.inf
  INF ShellBinPkg/UefiShell/UefiShell.inf

  #
  # Bds
  #
  INF MdeModulePkg/Universal/DevicePathDxe/DevicePathDxe.inf

  INF HwPkg/Bds/Bds.inf

[FV.FVMAIN_COMPACT]
FvAlignment        = 16
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE

!if $(EDK2_SKIP_PEICORE) == 1
  #INF ArmPlatformPkg/PrePi/PeiUniCore.inf
  INF ArmPlatformPkg/PrePi/PeiMPCore.inf
!else
  INF ArmPlatformPkg/PrePeiCore/PrePeiCoreMPCore.inf
  INF MdeModulePkg/Core/Pei/PeiMain.inf
  INF ArmPlatformPkg/PlatformPei/PlatformPeim.inf
  #INF ArmPlatformPkg/MemoryInitPei/MemoryInitPeim.inf
  #INF HwPkg/Override/ArmPlatformPkg/MemoryInitPei/MemoryInitPeim.inf
  INF HwProductsPkg/Hi1610Evb/Hi1610Evbb/MemoryInitPei/MemoryInitPeim.inf
  INF ArmPkg/Drivers/CpuPei/CpuPei.inf
  INF MdeModulePkg/Universal/PCD/Pei/Pcd.inf
  INF IntelFrameworkModulePkg/Universal/StatusCode/Pei/StatusCodePei.inf
  #INF MdeModulePkg/Universal/FaultTolerantWritePei/FaultTolerantWritePei.inf
  #INF MdeModulePkg/Universal/Variable/Pei/VariablePei.inf
  
  INF HwProductsPkg/Hi1610Evb/BootLinuxConfig/BootLinuxConfigPeim.inf

  INF MdeModulePkg/Core/DxeIplPeim/DxeIpl.inf
!endif

  FILE FV_IMAGE = 9E21FD93-9C72-4c15-8C4B-E77F1DB2D792 {
    SECTION GUIDED EE4E5898-3914-4259-9D6E-DC7BD79403CF PROCESSING_REQUIRED = TRUE {
      SECTION FV_IMAGE = FVMAIN
    }
  }


!include HwProductsPkg/Pv660.fdf.inc

